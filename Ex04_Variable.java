package com.test.java;

public class Ex04_Variable {

	public static void main(String[] args) {
		
		
		//1. 국어 점수 > 성질 분석 > 형태(정수) + 길이(0~100)
		//2. 1의 상황 > 자료형 중 하나를 선택 > byte 형
		//3. 2의 자료형 > 변수 생성
		//4. 변수 입출력
		
		//변수 생성하기
		//- 자료형 변수명;
		byte 국어점수;
		
		//변수 초기화
		//- 변수명 = 값;
		국어점수 = 100;
		
		//변수 사용하기
		System.out.println(국어점수); //공간 출력(X), 공간을 찾아가서 그 안의 값을ㅇ 가져와 출력
		
		//**변수 생성하기
		//영어점수 > 변수명은 중복될 수 없다. 
		byte eng;
		byte eng1;
		
		//수학점수
		byte math;
		
		//**변수명 생성 규칙 > 명명법
		//1. 영문자 사용 + 숫자 사용 + 특수문자(_) > 권장(필수)
		//2. 숫자로 시작 불가능
		//3. 예약어 사용 불가능
		//4. ***의미있게. 
		
		//프로그램 통과(o), 가독성 실패
		byte a;
		a = 90;
		System.out.println(a);
		
		
		//프로그래밍 기술의 발전 방향!! > 코드의 재사용(감소)
		//프로그램 생성 > 프로그램 유지/보수
		
		byte math4, math5, math6; //생산성 높음, 유지보수성 높음
		
		byte math7=100;
		
		byte math8=100, math9=90, math10=80;
		byte math11 , math12=80 , math13;
		
		
		//***표현식은 동일한데(kor1) 값이 바꼈다. > 변수
		
		
		//*** 표현식은 동일한데(90) 값이 안바꼈다. > 상수 > 데이터(값) > 리터럴(Literal) -> 순수한 데이터(값)를 보통 리터럴이라 한다. 
		System.out.println(90);
		System.out.println(90);
		
		//final 변수, 상수
		// - final이라는 키워드를 붙이는 순간 수정이 불가능하다. 
		// - 한 번 값을 초기화하면 더 이상 변경을 할 수 없는 변수
		// - *** 상수를 사용하고 싶은데 리터럴은 의미가 없어서, 의미있는 상수를 사용하기 위해서 사용함. 
		final byte kor3=80; //자바에서는 상수를 표현할 때 final을 붙인다.  
		
		//자바는 (식별자의) 대소문자를 구분한다. 
		
		//final 변수(=상수)는 대문자로 작성한다. (********)
		final double PI = 3.14;

		
		
		//식별자 명명법 패턴
		//1. 헝가리언 표기법
		//2. 파스칼 표기법
		//3. 캐멀 표기법
		//4. 스네이크 표기법
		//5. 케밥 표기법
		
		//1. 헝가리언 표기법
		// - 식별자를 만들 때 식별자의 접두어로 해당 자료형을 표시하는 방법. 이 변수의 자료형이 뭔지 티 내는 방법. 
		
		int age;
		int intAge;
		int int_age;
		int iage;
		int i_age;
		
		
		//2. 파스칼 표기법
		//- 식별자 단어의 첫문자를 대문자로 표기 + 나머지 문자를 소문자로 표기
		//- 2개 이상의 단어로 만든 합성어 > 각 단어의 첫문자를 대문자로 표기
		//- 사용) 클래스명
		int EnglishScore;
		int English;
		
		//3. 캐멀 표기법
		//- 식별자 단어의 첫문자를 소문자로 표기 + 나머지 문자를 소문자로 표기
		//- 2개 이상의 단어로 만든 합성어 > 각 단어의 첫문자를 대문자로 표기 
		//- 사용) 변수명, 메소드명
		int englishScore;
		int english;
		
		//4. 스네이크 표기법
		//- 전부 소문자로 표기
		//- 합성어 > 각 단어를 '_'로 연결
		//- 사용) 정해지지 않음 > 마음대로..
		int english_score;
		
		//5. 케밥 표기법
		//- 전부 소문자로 표기
		//- 합성어 > 각 단어를 '-'로 연결
		//- 사용) 자바에서 불가능
		//- 나중에 과목에서 사용(HTML, CSS)
		
		//int english-score;
		
		
		
		
	}

}
